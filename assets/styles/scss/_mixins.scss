// THEME
@mixin theme() {
    .ss- {
        @content
    }
}

// CONTAINER
@mixin container($containerWidth: 1440px) {
    max-width: $containerWidth;
    margin-inline: auto;
    padding-inline: 20px;
}

@mixin containerFluid($fillscreen: false) {
    width: 100%;

    @if $fillscreen == true {
        height: 100%;
    }
}

// BROWSERS
@mixin setBrowsers($attr, $value, $browsers: $browsers-default) {    
    @each $browser in $browsers {
        -#{$browser}-#{$attr}: #{$value};
    }

    #{$attr}: #{$value};
}

// BORDER RADIUS
@mixin borderRadius($radius) {
    @include setBrowsers(border-radius, $radius);
}

@mixin rounded() {
    @include borderRadius(50%);
}

// FLEXBOX
@mixin flex($justifyContent: center, $alignItems: center, $flexWrap: wrap) {
    display: flex;
    justify-content: $justifyContent;
    align-items: $alignItems;
    flex-wrap: $flexWrap;
}

@mixin flexBasis($basis, $gap: 0) {
    @if $gap != 0 {
        flex-basis: calc($basis - $gap);
    }

    @else {
        flex-basis: $basis;
    }
}

@mixin flex1($gap: 0) {
    @include flexBasis(100%, $gap);
}

@mixin flex2($gap: 0) {
    @include flexBasis(calc(100% / 2), calc($gap - ($gap / 2)));
}

@mixin flex3($gap: 0) {
    @include flexBasis(calc(100% / 3), calc($gap - ($gap / 3)));
}

@mixin flex4($gap: 0) {
    @include flexBasis(calc(100% / 4), calc($gap - ($gap / 4)));
}

@mixin column() {
    flex-direction: column;
}

@mixin row() {
    flex-direction: row;
}

@mixin columnReverse() {
    flex-direction: column-reverse;
}

@mixin rowReverse() {
    flex-direction: row-reverse;
}


// POSITION
@mixin relative() {
    position: relative;
}

@mixin absolute($top: 0, $left: 0) {
    position: absolute;
    top: $top;
    left: $left;
}

@mixin absoluteFull($top: 0, $left: 0, $fillScreen: false) {
    @include absolute($top, $left);
    @include containerFluid($fillScreen);
}

// TRANSITION
@mixin transition($property: $transition-property, $duration: $transition-duration, $timingFunction: $transition-timing-function, $delay: 0s) {
    transition: $property $duration $timingFunction $delay;
}

// RESPONSIVE DESIGN
@mixin setResponsiveDesign($screenWidth, $isMaxWidth: false) {   
    @if $isMaxWidth == true {
        @media screen and (max-width: $screenWidth) {
            @content;
        }
    }

    @else {
        @media screen and (min-width: $screenWidth) {
            @content;
        }
    }
}